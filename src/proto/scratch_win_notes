https://github.com/clockworksspheres/ramdisk.git

(in Windows Powershell, run as Administrator)
choco install imdisk

(respond to prompt)
a

The ImDisk command may be only as administrator to create ramdisks (to my knowledge).


-s size
-v partition


-o option
ro
rw (default)
cd cdrom
fd floppy
hd hard drive (default)

-m mountpoint

-p format    -p "/fs:ntfs /q /y"

-a attach

-a -s <size> -m <mountpoint>   

https://forums.guru3d.com/threads/guide-using-imdisk-to-set-up-ram-disk-s-in-windows-with-no-limit-on-disk-size.356046/

imdisk -a -s 512M -m X: -p "/fs:ntfs /q /y"

This command yeilded a raw disk, so probably should do -o hd...or do some tests to see if RAW is ok for processing...




• -a initializes the virtual disk.
• -s 512M is the size, 512 MegaBytes.
The full choices are b, k, m, g, t, K, M, G, or T.
These denote a number of 512-byte blocks, thousand bytes, million bytes, billion bytes, trillion bytes, KB, MB, GB, and TB, respectively.
• -m X: sets up the mount point a.k.a. the drive letter, X:.
• -p "fs:ntfs /q /y" formats the drive.
-p's parameters are actually for Windows' format program.
So, if you want the RAM disk in a different filesystem, just change ntfs to fat (FAT16) or fat32 (FAT32).




(disk number for -u) 
imdisk -l
\Device\ImDisk0

imdisk -l -u 0 
Drive letter: X
No image file.
Size: 536870912 bytes (512 MB), Virtual Memory, HDD.

outputs above need to be parsed for relevant information...

##################
#

###################
# Platform related notes...

exeption for specific platform.

raise platform specific exeption

handle platform specific exception

moc platform specific libs
    (libc for instance)

if re.match("^win32$", sys.platform.strip()):
    raise Win32PlatformFoundError("Windows Platform Found Error...")
  -or maybe-
if sys.platform.strip() == "win32":
    raise Win32PlatformFoundError("Windows Platform Found Error...")

 - or - 

if re.match("^win32$", sys.platform.strip()):
    import win
  -or maybe-
if sys.platform.strip() == "win32":

# Create a PlatformFoundErrors.py exceptions..

# Can immediately create darwin (macOS) and win32 (Windows) platforms...


getLibc should be an interface and there should be concrete instances that are spawned...


####
# May try using pywin32 for windows specific extentions: https://github.com/mhammond/pywin32

#####
# try this: https://www.bytesizedalex.com/get-windows-ntfs-block-size/
# fsutil fsinfo ntfsinfo p:
# Where p: is the drive or full directory path you want information for... (like mount point)

"We can make use of the fsutil amd DiskPart commands. Note that in fsutil the value is ‘Byte Per Cluster’"

PARSING REQUIRED...

Actually, the AI search results state that the "Bytes per Physical Sector:" is a more accurate measure than the "Bytes per Cluster" in Windows 11 ...

really, they should match, if they don't, choose physical...  I'm pretty sure....

https://superuser.com/questions/855116/how-do-i-determine-optimal-blocksize-sectorsize-and-clustersize-for-a-disk-wit

what we're looking for is filesystem blocks, not disk blocks, so that's cluster sizes.... I'm pretty sure....


Windows 10 and Windows 11 I believe...

#####

